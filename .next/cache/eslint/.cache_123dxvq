[{"D:\\yousf\\tokenUiandGetBlances\\pages\\api\\hello.ts":"1","D:\\yousf\\tokenUiandGetBlances\\pages\\index.tsx":"2","D:\\yousf\\tokenUiandGetBlances\\pages\\_app.tsx":"3","D:\\yousf\\tokenUiandGetBlances\\components\\providers\\index.ts":"4","D:\\yousf\\tokenUiandGetBlances\\components\\providers\\web3\\index.tsx":"5","D:\\yousf\\tokenUiandGetBlances\\components\\providers\\web3\\utils.ts":"6","D:\\yousf\\tokenUiandGetBlances\\components\\ui\\index.ts":"7","D:\\yousf\\tokenUiandGetBlances\\components\\ui\\layout\\BaseLayout.tsx":"8","D:\\yousf\\tokenUiandGetBlances\\components\\ui\\link\\index.tsx":"9","D:\\yousf\\tokenUiandGetBlances\\components\\ui\\navbar\\index.tsx":"10","D:\\yousf\\tokenUiandGetBlances\\components\\ui\\navbar\\walletbar.tsx":"11"},{"size":307,"mtime":1661439958761,"results":"12","hashOfConfig":"13"},{"size":5116,"mtime":1680523203261,"results":"14","hashOfConfig":"13"},{"size":411,"mtime":1680523071439,"results":"15","hashOfConfig":"13"},{"size":54,"mtime":1664449902545,"results":"16","hashOfConfig":"13"},{"size":3184,"mtime":1680522694152,"results":"17","hashOfConfig":"13"},{"size":993,"mtime":1680522688790,"results":"18","hashOfConfig":"13"},{"size":158,"mtime":1680521995438,"results":"19","hashOfConfig":"13"},{"size":403,"mtime":1680522759078,"results":"20","hashOfConfig":"13"},{"size":728,"mtime":1661577522916,"results":"21","hashOfConfig":"13"},{"size":3205,"mtime":1680521909213,"results":"22","hashOfConfig":"13"},{"size":886,"mtime":1680522204624,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8jp5m1",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\yousf\\tokenUiandGetBlances\\pages\\api\\hello.ts",[],[],"D:\\yousf\\tokenUiandGetBlances\\pages\\index.tsx",[],[],"D:\\yousf\\tokenUiandGetBlances\\pages\\_app.tsx",[],[],"D:\\yousf\\tokenUiandGetBlances\\components\\providers\\index.ts",[],[],"D:\\yousf\\tokenUiandGetBlances\\components\\providers\\web3\\index.tsx",["59"],[],"import React, {\r\n  createContext,\r\n  FC,\r\n  FunctionComponent,\r\n  useCallback,\r\n  useContext,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport Web3Modal from \"web3modal\";\r\nimport { Contract, providers } from \"ethers\";\r\nimport {\r\n  InitialState,\r\n  //  loadContract\r\n} from \"./utils\";\r\nconst providerOptions = {\r\n  walletconnect: {\r\n    package: WalletConnectProvider, // required\r\n    options: {\r\n      networkUrl:\r\n        \"https://rinkeby.infura.io/v3/36fc2665f5504bc18c3b7f9fab0e0c46\",\r\n      rpc: {\r\n        1: \"https://rinkeby.infura.io/v3/36fc2665f5504bc18c3b7f9fab0e0c46\",\r\n        4: \"https://rinkeby.infura.io/v3/36fc2665f5504bc18c3b7f9fab0e0c46\",\r\n      },\r\n      chainId: 4,\r\n    },\r\n  },\r\n};\r\n\r\nlet initialState = {\r\n  provider: null || undefined,\r\n  _web3Provider: null,\r\n  account: null,\r\n  chainId: null,\r\n  signer: null,\r\n  currentBlock: null,\r\n  isLoading: true,\r\n  contract: null,\r\n  isInstalled: null,\r\n};\r\nlet web3Modal: any;\r\nlet isInstalled: any;\r\nif (typeof window !== \"undefined\") {\r\n  isInstalled = window.ethereum?.isMetaMask || false;\r\n  web3Modal = new Web3Modal({\r\n    network: \"mainnet\", // optional\r\n    cacheProvider: true,\r\n    disableInjectedProvider: false,\r\n    providerOptions, // required\r\n    theme: {\r\n      background: \"rgb(0, 0, 0)\",\r\n      main: \"rgb(199, 199, 199)\",\r\n      secondary: \"rgb(136, 136, 136)\",\r\n      // border: \"rgba(195, 195, 195, 0.14)\",\r\n      hover: \"rgb(16, 26, 32)\",\r\n    } as any, // optionalDependencies\r\n  });\r\n}\r\n\r\nexport const Web3Context = createContext<any>(null);\r\nconst AppWeb3Provider: FunctionComponent = ({ children }: any) => {\r\n  const [state, setState] = useState<InitialState>(initialState);\r\n  const connect = async () => {\r\n    const provider = await web3Modal?.connect();\r\n    const _web3Provider = new providers.Web3Provider(provider);\r\n    const signer = _web3Provider.getSigner();\r\n    const account = await signer.getAddress();\r\n    const network = await _web3Provider.getNetwork();\r\n    const currentBlock = await _web3Provider.getBlockNumber();\r\n    // const contract = await loadContract(\"NftMarket\", provider, signer);\r\n\r\n    setState({\r\n      ...state,\r\n      provider: provider,\r\n      _web3Provider: _web3Provider,\r\n      account: account,\r\n      chainId: network.chainId,\r\n      signer: signer,\r\n      // contract: contract,\r\n      isInstalled: isInstalled,\r\n    });\r\n  };\r\n  const disconnect = useCallback(\r\n    async function () {\r\n      await web3Modal.clearCachedProvider();\r\n      setState({\r\n        ...state,\r\n        provider: null,\r\n        _web3Provider: null,\r\n        account: null,\r\n        chainId: null,\r\n        signer: null,\r\n      });\r\n      window.location.reload();\r\n    },\r\n    [state.provider]\r\n  );\r\n\r\n  return (\r\n    <Web3Context.Provider\r\n      value={{\r\n        account: state.account,\r\n        signer: state.signer,\r\n        connect,\r\n        disconnect,\r\n        contract: state.contract,\r\n        isInstalled: isInstalled,\r\n      }}\r\n    >\r\n      {children}\r\n    </Web3Context.Provider>\r\n  );\r\n};\r\n\r\nexport default AppWeb3Provider;\r\n\r\nexport function useWeb3() {\r\n  return useContext(Web3Context);\r\n}\r\n","D:\\yousf\\tokenUiandGetBlances\\components\\providers\\web3\\utils.ts",[],[],"D:\\yousf\\tokenUiandGetBlances\\components\\ui\\index.ts",[],[],"D:\\yousf\\tokenUiandGetBlances\\components\\ui\\layout\\BaseLayout.tsx",[],[],"D:\\yousf\\tokenUiandGetBlances\\components\\ui\\link\\index.tsx",[],[],"D:\\yousf\\tokenUiandGetBlances\\components\\ui\\navbar\\index.tsx",["60"],[],"import React, { FC, useContext } from \"react\";\r\nimport { Disclosure } from \"@headlessui/react\";\r\nimport { MenuIcon, XIcon } from \"@heroicons/react/outline\";\r\nimport ActiveLink from \"../link\";\r\nimport Link from \"next/link\";\r\nimport { useWeb3, Web3Context } from \"@providers/web3\";\r\nimport Walletbar from \"./walletbar\";\r\n\r\nconst navigation = [\r\n  { name: \"form\", href: \"/\", current: true },\r\n  // { name: \"Create\", href: \"/nft/create\", current: false },\r\n  // { name: \"Profile\", href: \"/profile\", current: false },\r\n];\r\n\r\nfunction classNames(...classes: string[]) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nconst Navbar: FC = (): JSX.Element => {\r\n  return (\r\n    <Disclosure as=\"nav\" className=\"bg-gray-800\">\r\n      {({ open }) => (\r\n        <>\r\n          <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\r\n            <div className=\"relative flex items-center justify-between h-16\">\r\n              <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\r\n                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\r\n                  <span className=\"sr-only\">Open main menu</span>\r\n                  {open ? (\r\n                    <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                  ) : (\r\n                    <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                  )}\r\n                </Disclosure.Button>\r\n              </div>\r\n              <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\r\n                <div className=\"flex-shrink-0 flex items-center\">\r\n                  <Link href=\"/\">\r\n                    <img\r\n                      className=\"hidden lg:block h-10 w-auto cursor-pointer\"\r\n                      src=\"/images/logo.png\"\r\n                      alt=\"Workflow\"\r\n                    />\r\n                  </Link>\r\n                </div>\r\n                <div className=\"hidden sm:block sm:ml-6\">\r\n                  <div className=\"flex space-x-4\">\r\n                    {navigation.map((item) => (\r\n                      <ActiveLink\r\n                        key={item.name}\r\n                        href={item.href}\r\n                        activeClass=\"bg-gray-900 text-white\"\r\n                      >\r\n                        <a\r\n                          className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\r\n                          aria-current={item.current ? \"page\" : undefined}\r\n                        >\r\n                          {item.name}\r\n                        </a>\r\n                      </ActiveLink>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\r\n                <div>\r\n                  <Walletbar />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Disclosure>\r\n  );\r\n};\r\nexport default Navbar;\r\n","D:\\yousf\\tokenUiandGetBlances\\components\\ui\\navbar\\walletbar.tsx",[],[],{"ruleId":"61","severity":1,"message":"62","line":98,"column":5,"nodeType":"63","endLine":98,"endColumn":21,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":39,"column":21,"nodeType":"67","endLine":43,"endColumn":23},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["68"],"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement",{"desc":"69","fix":"70"},"Update the dependencies array to be: [state]",{"range":"71","text":"72"},[2752,2768],"[state]"]